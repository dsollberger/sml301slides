---
title: "21: Generative Adversarial Networks"
author: "Derek Sollberger"
date: "2025-04-14"
format:
  html:
    toc: true
---

```{r}
#| echo: false
#| message: false
#| warning: false

```

# Session 21: Generative Adversarial Networks

## Learning objectives:

:::: {.columns}

::: {.column width="45%"}
- Introduce generative adversarial networks
:::

::: {.column width="10%"}

:::

::: {.column width="45%"}
![Cycle GANs](cycle_gan_paintings.png)

* image credit: [Jun-Yan Zhu, et al.](https://junyanz.github.io/CycleGAN/)
:::

::::

## Generative AI

::::: {.panel-tabset}

### Definition

:::: {.columns}

::: {.column width="75%"}
* "Generative AI is a form of artificial intelligence that is designed to generate content, including text, images, video and music. It uses large language models and algorithms to analyze patterns in datasets to mimic the style or structure of specific types of content."
* [quote and image source](https://www.eweek.com/artificial-intelligence/generative-ai-vs-machine-learning/)
:::

::: {.column width="25%"}
![generative AI](generative_ai.png)
:::

::::

### Dall-E

![June 2022](Dall_e_cheeseburgers.png)

[image source](https://www.onefootdown.com/2022/6/21/23175949/notre-dame-football-immersive-and-horrifying-dall-e-mini-art-experience-gumbo-pitbull-cheeseburgers)

### Stable Diffusion

![August 2023](stable_diffusion.png)

[image source](https://www.geeky-gadgets.com/stable-diffusion-sdxl-beginners-guide/)

:::::

## Activity: Quick Draw!

::::: {.panel-tabset}

## App

:::: {.columns}

::: {.column width="30%"}
![Quick Draw, by Google](QuickDraw.png)	
:::

::: {.column width="10%"}
	
:::

::: {.column width="60%"}
Try out Quick Draw!

* [https://quickdraw.withgoogle.com/](https://quickdraw.withgoogle.com/)
* app will ask you to sketch 6 images

    * and it will try to recognize your artwork

* caution: there is sound

:::

::::

## Lions

![Quick, Draw! Lions](quickdraw_lions.png)

## Tigers

![Quick, Draw! Tigers](quickdraw_tigers.png)

## Penguins

![Quick, Draw! Penguins](quickdraw_penguins.png)

:::::


# GANS

## Overview

![GANs overview](DLI_fig_12_1.png)

* image source: [Deep Learning Illustrated](https://www.deeplearningillustrated.com/)

## Discriminator

![Training the discriminator](DLI_fig_12_2.png)

* image source: [Deep Learning Illustrated](https://www.deeplearningillustrated.com/)

## Generator

![Training the generator](DLI_fig_12_3.png)

* image source: [Deep Learning Illustrated](https://www.deeplearningillustrated.com/)

::: {.callout-tip}
## GAN Objectives

* the goal of a generator is to create better fake images
* the goal of a discriminator is to better classify fake images

:::

## Adversarial Network

![Adversarial network](DLI_fig_12_4.png)

* image source: [Deep Learning Illustrated](https://www.deeplearningillustrated.com/)

## Initial Results

![Goodfellow, et al., 2014](Goodfellow_2014.png)


# Conditional GANs

::: {.callout-note}
## cGANs

"We investigate conditional adversarial networks as a general-purpose solution to image-to-image translation problems. These networks not only learn the mapping from input image to output image, but also **learn a loss function** to train this mapping. This makes it possible to apply the same generic approach to problems that traditionally would require very different loss formulations."

* [Isola, et al.](https://phillipi.github.io/pix2pix/)
:::

![cGAN in ecology](cGAN_ecology.png)

* image source: [Hayatbini, et al.](https://www.mdpi.com/2072-4292/11/19/2193#)

## Activity: Pix2Pix Image-to-Image

::::: {.panel-tabset}

## App

:::: {.columns}

::: {.column width="45%"}
![image-to-image](pix2pix_shoes.png)	
:::

::: {.column width="10%"}
	
:::

::: {.column width="45%"}
* [app (link)](https://affinelayer.com/pixsrv/) by Christopher Hesse
* [GitHub repo](https://github.com/affinelayer/pix2pix-tensorflow)
:::

::::

## ex1

![edges2cats](edges2cats.png)

## ex2

![facades](facades.png)

## ex1

![edges2handbags](edges2handbags.png)

:::::

## Activity: Pix2Pix Instruct

::::: {.panel-tabset}

## App

:::: {.columns}

::: {.column width="45%"}
![pix2pix](pix2pix.png)	
:::

::: {.column width="10%"}
	
:::

::: {.column width="45%"}
* [app (link)](https://huggingface.co/spaces/timbrooks/instruct-pix2pix) by Tim Brooks
* [GitHub repo](https://github.com/timothybrooks/instruct-pix2pix)
:::

::::

## ex1

:::: {.columns}

::: {.column width="45%"}
![New Jersey flag](NJ_flag.png)
:::

::: {.column width="10%"}
	
:::

::: {.column width="45%"}
![convert to grayscale](NJ_flag_grayscale.png)
:::

::::

## ex2

:::: {.columns}

::: {.column width="45%"}
![New Jersey flag](NJ_flag.png)
:::

::: {.column width="10%"}
	
:::

::: {.column width="45%"}
![add more horses](NJ_flag_more_horses.png)
:::

::::

## ex3

:::: {.columns}

::: {.column width="45%"}
![New Jersey flag](NJ_flag.png)
:::

::: {.column width="10%"}
	
:::

::: {.column width="45%"}
![replace humans with ramen](NJ_flag_ramen.png)
:::

::::

:::::


# Stacked GANs

::: {.callout-note}
## Stacked GANs

*  "Stage-I GAN sketches the primitive shape and colors of the object based on the given text description, yielding Stage-I low-resolution images"
* " Stage-II GAN takes Stage-I results and text descriptions as inputs, and generates high-resolution images with photo-realistic details"

:::

![Zhang, et al., 2016](stackGAN_stages.png)

## Architecture

![Zhang, et al., 2016](stackGAN_architecture.png)

## Scaling

![Zhang, et al., 2016](stackGAN_scaling.png)


# Cycle GANs

![cycle GAN possibilities](cycle_GAN_splash.png)

::: {.callout-note}
## cGANs

* "... learning to translate an image from a source domain $X$ to a target domain $Y$ in the absence of paired examples ..." --- [Jun-Yan Zhu, et al., 2017](https://junyanz.github.io/CycleGAN/)

:::

# Ethics Corner: Research Consent

![IRB principles](IRB_principles.png)

* image source: [Ross Avilla](https://methods.sagepub.com/video/ethical-guidelines-and-irb)

## Architecture

![](cycle_GAN_architecture_A2B.png)

![cycle GAN architecture](cycle_GAN_architecture_B2A.png)

* images source: [Bansal and Rathore](https://hardikbansal.github.io/CycleGANBlog/)

::: {.callout-tip}
## cGAN Objective

In a cyclic GAN, the generator and discriminator converge toward a Nash equilibrium.

:::

# Unsupervised Representation Learning

![modifications to pictures](radford_rooms.png)

* image source: [Radford, et al, 2016](https://arxiv.org/abs/1511.06434)

![trained filters](radford_filters.png)

* image source: [Radford, et al, 2016](https://arxiv.org/abs/1511.06434)

::::: {.panel-tabset}

## Image Space

![vector space of images](image space.png)

* image source: [Deep Learning Illustrated](https://www.deeplearningillustrated.com/)

## ex1

![image space](image_space_ex1.png)

* image source: [Radford, et al, 2016](https://arxiv.org/abs/1511.06434)

## ex2

![image space](image_space_ex2.png)

* image source: [Radford, et al, 2016](https://arxiv.org/abs/1511.06434)

:::::




# Quo Vadimus?

:::: {.columns}

::: {.column width="45%"}
* due this Friday (April 18):

    - Precept 10
    - Research Consent
    
* semester projects will be due May 10
:::

::: {.column width="10%"}
	
:::

::: {.column width="45%"}
Student evaluation custom questions:

1. In the space below, please describe the learning environment of your precept section – what about it worked for you, what suggestions do you have to make it work better for you, what challenges did you face – and mention your preceptor by name.

2. For future offerings of this course, how could we better align with the research goals of a Princeton student (such as their senior thesis)?

3. Which course topics do you wish we discussed more of the mathematical background and rigor?  On the contrary, which topics could have had less of an emphasis  on mathematical background and rigor? Please be as specific as possible.
:::

::::


# Footnotes

::: {.callout-note collapse="true"}

## (optional) Additional Resources and References

* [flag of New Jersey](https://www.britannica.com/topic/flag-of-New-Jersey) article at Britannica

:::

::: {.callout-note collapse="true"}
## Session Info

```{r}
sessionInfo()
```
:::


:::: {.columns}

::: {.column width="45%"}
	
:::

::: {.column width="10%"}
	
:::

::: {.column width="45%"}

:::

::::

::::: {.panel-tabset}



:::::